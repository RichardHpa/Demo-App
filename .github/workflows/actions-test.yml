# Workflow for Testing Actions
name: ðŸ§ª Testing Actions

on:
  push:
    branches:
      - 'actions-test' # only run on actions-test branch

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  testing:
    runs-on: ubuntu-latest
    outputs:
      newer: ${{ steps.compare.outputs.newer }}
    steps:
      - run: echo "Testing Github Actions on branch $GITHUB_REF"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

  check:
    name: Check Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Setup Node, Caching, and Yarn install'
        uses: ./.github/actions/node-yarn

      - name: Run Lint
        run: yarn lint:ci

      - name: Run Jest
        run: yarn test:ci

  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      isNewerVersion: ${{ steps.compare.outputs.isNewerVersion }}
      versionType: ${{ steps.compare.outputs.versionType }}
      tag: ${{ steps.PACKAGE_VERSION.outputs.tag }}
    needs: check
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Setup Node, Caching, and Yarn install'
        uses: ./.github/actions/node-yarn

      - name: 'Get current Package Version'
        id: PACKAGE_VERSION
        uses: martinbeentjes/npm-get-version-action@v1.2.3
      - name: Set PACKAGE_VERSION and GIT_TAG
        run: |
          echo "PACKAGE_VERSION=${{ steps.PACKAGE_VERSION.outputs.current-version }}" >> $GITHUB_ENV
          echo "::set-output name=tag::v${{ steps.PACKAGE_VERSION.outputs.current-version }}"

      - name: Compare the two versions
        uses: ./.github/actions/compare-versions
        id: compare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          currentVersion: ${{ env.PACKAGE_VERSION }}

  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.isNewerVersion == 'true'
    steps:
      - name: 'Setup Node, Caching, and Yarn install'
        uses: ./.github/actions/node-yarn

      - name: Debug
        run: |
          echo isNewerVersion: ${{ needs.prepare.outputs.isNewerVersion }}
          echo versionType: ${{ needs.prepare.outputs.versionType }}
          echo tag: ${{ needs.prepare.outputs.tag }}
